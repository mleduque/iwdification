DEFINE_ACTION_FUNCTION iwd_bardsong_postproduction BEGIN
		
		LAM data_spell_resrefs 
		INCLUDE "%MOD_FOLDER%/%component_loc%/lib/cd_bardic_post.tpa" // just in case Cam's code isn't SFO-sugar-compliant
		LAF cd_bardic_post END

		ACTION_IF !enhanced_edition BEGIN
			OUTER_SPRINT obg2_res_path "%MOD_FOLDER%/%component_loc%/obg2_res"
			INCLUDE "%MOD_FOLDER%/%component_loc%/lib/obg2_bard.tpa"
			LAF obg2_bard END
		END


   //  change FJBARD/CDIBARD to point at the Ballad of Three Heroes
	ACTION_IF FILE_EXISTS_IN_GAME "fjbard.spl" BEGIN
		OUTER_SPRINT bard_applicator fjbard
	END ELSE BEGIN
		OUTER_SPRINT bard_applicator cdibard
	END
	
	spl.edit["%bard_applicator%"]
	[
		m.ab_fx.alter{s_resource:=%BARD_SONG_BALLAD%}
	]

   // add the new powers in the CLAB; update regular bard description

	class.edit[bard|edit_strrefs_in_place:i=0]
	[
		k.kit_grant_powers{#BARD1 1,#BARD2 3,#BARD3 5,#BARD4 7,#BARD5 9,#BARD6 11}	
		INNER_PATCH_SAVE k_desc "%k_desc%" BEGIN
			LPF bard_desc_helper END
		END
	]
	
	// update bard kit descriptions
	
	kit.edit_all[bard|edit_strrefs_in_place:i=0 skip_trueclass:i=1]
	[
		INNER_PATCH_SAVE k_desc "%k_desc%" BEGIN
			LPF bard_kit_desc_helper END
		END	
	]

	// sort out Enhanced Bard Song HLA
	
	ACTION_IF FILE_EXISTS_IN_GAME "spcl920.spl" BEGIN
		WITH_SCOPE BEGIN
			LAF struct_read STR_VAR file=spcl920.spl RET_ARRAY m0=struct END
			spl.copy[#bard1=>dw-920]
			[
				m.fx.alter{s_resource:=dw-920}
				m.ab_fx.alter{s_resource:=spcl920a}
				m.ab.alter{s_icon:=spenbarb}
				m_name:="%m0_name%"
				INNER_PATCH_SAVE m_description "%m0_description%" BEGIN
					old:=@223
					REPLACE_TEXTUALLY "%old%" ""
					old:=@224
					REPLACE_TEXTUALLY "%old%" ""
					old:=@225
					REPLACE_TEXTUALLY "%old%" ""
				END
			]
		END
		COPY_EXISTING "luba0.2da" override
			REPLACE_TEXTUALLY "AP_SPCL920" "GA_DW-920"

	END

END

DEFINE_PATCH_FUNCTION bard_desc_helper BEGIN
	PATCH_LOG bard_desc_helper
	SPRINT old @201
	PATCH_LOG "201 ready"
	REPLACE_TEXTUALLY "\(.*\)%old%.*" "\1DW_PLACEHOLDER"
	PATCH_LOG "201 done ->%old%"
	PATCH_LOG "now start cleanup"
	PATCH_FOR_EACH tra_ref IN 202 203 204 BEGIN
		PATCH_LOG "start %tra_ref%"
		SPRINT old (AT tra_ref)
		REPLACE_TEXTUALLY "[%WNL%%LNL%%MNL%].*%old%" ""
		PATCH_LOG "done %tra_ref% ->%old%"
	END
	PATCH_LOG "cleanup done, now reinsert"
	PATCH_FOR_EACH tra_ref IN 216 215 214 213 212 211 210 BEGIN
		PATCH_LOG "start %tra_ref%"
		SPRINT new (AT tra_ref)
		REPLACE_TEXTUALLY "\(.*\)DW_PLACEHOLDER.*\([%WNL%%LNL%%MNL%]\)" "\1DW_PLACEHOLDER\2\1%new%\2"		
		PATCH_LOG "done %tra_ref% ->%new%"
	END
	REPLACE_TEXTUALLY "\(.*\)DW_PLACEHOLDER.*\([%WNL%%LNL%%MNL%]\)" ""	
END

DEFINE_PATCH_FUNCTION bard_kit_desc_helper BEGIN
	PATCH_LOG bard_kit_desc_helper
	SPRINT discard @221 // None.
	SPRINT disadvantages @222 // Disadvantages:
	SPRINT newline @220 // Does not know the songs available to regular Bards.
	REPLACE_TEXTUALLY "%disadvantages%\(.*[%WNL%%MNL%%LNL%][^a-zA-Z0-9]*\)\([a-zA-Z0-9].*\)" "%disadvantages%\1%newline%\1\2"
	PATCH_LOG "patched in disavantages"
	REPLACE_TEXTUALLY "[%WNL%%MNL%%LNL%][^a-zA-z]*%discard%.*" ""
END
